# -*- coding: utf-8 -*-
"""Task 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1go0HNCG6psJTQ3AFdsPbgt5di4NBlOKJ
"""

# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error

"""What is a Linear Regression Model in Machine Learning?
Linear Regression is a supervised learning algorithm in machine learning used for predicting a continuous numerical value based on input features. It assumes a linear relationship between the dependent variable (Y) and one or more independent variables (X).
"""

train_path = "/content/train.csv"
test_path = "/content/test.csv"

df = pd.read_csv(train_path)

df.head()

# Selecting features
features = ['GrLivArea', 'BedroomAbvGr', 'FullBath', 'HalfBath']
X = df[features]
y = df['SalePrice']

# Splitting the data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# Evaluation
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)

print(f"Mean Absolute Error: {mae}")
print(f"Mean Squared Error: {mse}")
print(f"Root Mean Squared Error: {rmse}")

# Plotting actual vs predicted values
plt.figure(figsize=(8,6))
sns.scatterplot(x=y_test, y=y_pred, alpha=0.6)
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual vs Predicted House Prices")
plt.show()

# Making predictions on the test set
test_df = pd.read_csv(test_path)
test_X = test_df[features]
test_preds = model.predict(test_X)



